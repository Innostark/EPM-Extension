@model EPM.Extension.Web.Models.CustomerDetailViewModel

@{
    ViewBag.Title = EPM.Extension.Web.Resources.Customer.EditTitle;
}

    <div class="form-horizontal">
        <br />
        <h4>@EPM.Extension.Web.Resources.Customer.EditTitle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Customer.Id)
        <input type="hidden" id="SearchMeteringCodeString" />
        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Kunde, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Kunde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.Kunde, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Kundennummer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Kundennummer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.Kundennummer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Strasse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Strasse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.Strasse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Plz, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Plz, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.Plz, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Ort, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer.Ort, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <h2>@EPM.Extension.Web.Resources.Customer.SubTitle</h2>

            <table id="MeteringCodeList" class="table display table-responsive">
                <thead>
                    <tr>
                        <th></th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col1</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col2</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col3</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col4</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col5</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col6</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col7</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col8</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col9</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col10</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCode.Col11</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>


@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@


<script language="javascript" type="text/javascript">
    $(document).ready(function() {
        var startMeteringCode = ('@Model.SearchRequest.PageNo' - 1) * '@Model.SearchRequest.PageSize';
        var isAscMeteringCode = '@Model.SearchRequest.IsAsc' == "True" || '@Model.SearchRequest.IsAsc' == "true";
        var sortByMeteringCode = ['@Model.SearchRequest.SortBy', isAscMeteringCode ? 'asc' : 'desc'];

        var mTable = $("#MeteringCodeList").dataTable({
            "iDisplayLength": 5,
            //"iDeferLoading": true,
            "displayStart": startMeteringCode || 0,
            "bFilter": true,
            "bLengthChange": false,
            "aaSorting": [sortByMeteringCode],
            "aoColumnDefs": [
                { 'bSortable': false, 'aTargets': [0] },
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ],
            "columns": [
                { "data": "Id" },
                { "data": "Zählpunktbezeichner" },
                { "data": "Kurzbezeichnung" },
                { "data": "Anlagentyp" },
                { "data": "Strasse" },
                { "data": "PLZ" },
                { "data": "Ort" },
                { "data": "Datenversand" },
                { "data": "Zählverfahren" },
                { "data": "Messung" },
                { "data": "Entnahme" },
                { "data": "Kundenrückmeldung" },
                {
                    "orderable": false,
                    "data": null,
                    "defaultContent": "<a class='edit'  href='javascript:;'>Detail</a>",
                    "class": "textAlignRight"
                }
            ],
            "processing": true,
            "serverSide": true,
            "ajax": {
                url: "/MeteringCode/Index",
                type: "POST",
                dataType: "json",
                data: function (params) {
                    params.PageNo = Math.ceil(params.start / params.length) + 1;
                    if (params.PageNo === 0) {
                        params.PageNo = 1;
                    }
                    params.PageSize = params.length;
                    params.SortBy = params.order[0].column;
                    if (params.SortBy === 0) {
                        params.SortBy = 1;
                    }
                    params.IsAsc = params.order[0].dir === "asc";
                    params.CustomerId = $('#Customer_Id').val();
                    $("#MeteringCodeList_filter input").val($('#SearchMeteringCodeString').val());

                    params.Param = $('#SearchMeteringCodeString').val();
                    //params.PerformedDate = $('#txtDate').val();
                },
                complete: fnActivityComplete
            }


        });

        function fnActivityComplete() {
            return false;
        }
        $('#MeteringCodeList_filter input').after($('<button id="searchMeteringCode" class="btn btn-primary btn-sm">Search</button>'));
        $('#searchMeteringCode').click(function () {
            //$("#SearchCustomerString").val(this.value);
            mTable.fnDraw();
        });
        $("#MeteringCodeList_filter input").unbind()
            .bind("input", function (e) {
                $("#SearchMeteringCodeString").val(this.value);
                if (this.value == "" || e.keyCode == 13) {
                    mTable.fnDraw();
                }
                return;
            });
        $('#MeteringCodeList').on('click', '.edit', function (e) {
            e.preventDefault();
            var nRow = $(this).parents('tr')[0];
            var aData = mTable.fnGetData(nRow);
            window.location.href = "/MeteringCode/Edit/" + aData.Id;
        });

    });
   


</script>