@using EPM.Extension.Model
@model EPM.Extension.Model.MeteringPoint

@{
    ViewBag.Title = "Detail";
    string isActive = "Yes";
    string tag = "";
}

<style>
    .navbar {
        display: none;
    }
    footer {
        display: none;
    }
</style>

<div class="modal fade" id="edit-threshold" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div id="edit-threshold-container" class="modal-dialog">
        <div id="form-content" class="modal-content">

        </div>
    </div>
</div>


    <div class="row-fluid">
        
        <div class="span12">
            <table id="ThresholdTable" class="table display table-responsive">
                <thead>
                    <tr>
                        <th style="display: none;"></th>
                        <th>Active</th>
                        <th></th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col9</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col2</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col3</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col4</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col5</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col6</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col7</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col8</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.MeteringCodeThresholds)
                    {
                        <tr id="type_@item.Type">
                            <td style="display: none;">@item.Id</td>
                            <td id="@{ Write(@item.Type + "_isActive");}">
                                @{
                        W‌rite(item.IsActive ? "Yes" : "No");
                                }

                            </td>

                            <td>@item.GrenzwertType</td>
                            <td>@item.GultingAb.ToString("dd-MM-yyyy") </td>
                            <td>@{
                        W‌rite(item.SaisonalitatAnwenden ? "Ja" : "Nein");
                            }</td>
                            <td>@item.MinimaGlobalInt</td>
                            <td>@item.MaximaGlobalInt</td>
                            <td>@item.MinimaSommerInt</td>
                            <td>@item.MinimaSommerInt</td>
                            <td>@item.MinimaWinterInt</td>
                            <td>@item.MaximaWinterInt</td>

                            <td>
                                @{
                        if (item.Type == EPM.Extension.Model.MeteringPointThresholdType.User)
                        {
                            tag = "<a id='addMeteringCodeThreshold' data-toggle='modal' data-target='#myModal'>Edit</a>";
                        }
                                }
                                @Html.Raw(tag)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
@section scripts
{
    <script type="text/javascript">
        function saveClicked() {
            var newModel = getFormValues();

            var postUrl = "http://localhost:10294/MeteringCodeThreshold/Edit";
            $.ajax({
                type: "POST",
                datatype: "json",
                url: postUrl,
                data: newModel,
                success: function(data) {
                    // Set values
                    alert('Changes saved successfully.');
                    var t = $('#type_User')[0];
                    var array = [
                        newModel.Id, newModel.GrenzwertBezeichner, newModel.GultingAb, newModel.SaisonalitatAnwenden, newModel.MinimaGlobal,
                        newModel.MaximaGlobal, newModel.MinimaSommer, newModel.MaximaSommer, newModel.MinimaWinter, newModel.MaximaWinter
                    ];
                    if (newModel.MaximaGlobal !== null || newModel.MinimaGlobal !== null
                      || newModel.MaximaWinter !== null || newModel.MinimaWinter !== null
                      || newModel.MaximaSommer !== null || newModel.MinimaSommer !== null) {
                        $('#System_isActive')[0].innerText = "No";
                        $('#User_isActive')[0].innerText = "Yes";
                    }
                    $('#type_User td:eq(3)')[0].innerText = newModel.GultingAb;
                    $('#type_User td:eq(4)')[0].innerHTML = newModel.SaisonalitatAnwenden;
                    $('#type_User td:eq(5)')[0].innerHTML = newModel.MinimaGlobal;
                    $('#type_User td:eq(6)')[0].innerHTML = newModel.MaximaGlobal;
                    $('#type_User td:eq(7)')[0].innerHTML = newModel.MinimaSommer;
                    $('#type_User td:eq(8)')[0].innerHTML = newModel.MaximaSommer;
                    $('#type_User td:eq(9)')[0].innerHTML = newModel.MinimaWinter;
                    $('#type_User td:eq(10)')[0].innerHTML = newModel.MaximaWinter;


                    $('#edit-threshold').modal('hide');
                },
                error: callError
            });


        }

        function callError() {
            alert("Problem in Saving Changes.");
        }

        function getFormValues() {
            return {
                Id: $('#edit-threshold #Id').val(),
                GrenzwertBezeichner: $('#edit-threshold #GrenzwertBezeichner').val(),
                GultingAb: $('#edit-threshold #GultingAb').val(),
                SaisonalitatAnwenden: $('#edit-threshold #SaisonalitatAnwenden').val(),
                MinimaGlobal: $('#edit-threshold #MinimaGlobal').val(),
                MaximaGlobal: $('#edit-threshold #MaximaGlobal').val(),
                MinimaSommer: $('#edit-threshold #MinimaSommer').val(),
                MaximaSommer: $('#edit-threshold #MaximaSommer').val(),
                MinimaWinter: $('#edit-threshold #MinimaWinter').val(),
                MaximaWinter: $('#edit-threshold #MaximaWinter').val()
            };
        }

        $(document).ready(function() {
            var thresholdTable = $('#ThresholdTable').dataTable({
                "bInfo": false,
                "bFilter": false,
                "bSort" : false,
                "bLengthChange": false,
            });
            $('#ThresholdTable_paginate').hide();
            $('#addMeteringCodeThreshold').click(function(e) {
                var data = thresholdTable.fnGetData($(this).parent().parent()[0])[0];
                var url = "/MeteringCodeThreshold/Edit/" + data; // the url to the controller
                $.get(url, function(data) {
                    $('#form-content').html(data);
                    $('#edit-threshold').modal('show');
                });
            });


            $('#ThresholdTable tbody').on('click', 'tr', function() {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                } else {
                    thresholdTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });
            $('#ThresholdTable').on('click', '.edit', function(e) {
                e.preventDefault();
                var nRow = $(this).parents('tr')[0];
                var aData = thresholdTable.fnGetData(nRow);
                window.location.href = "/MeteringCode/Edit/" + aData.Id;
            });
        });
    </script>
}
