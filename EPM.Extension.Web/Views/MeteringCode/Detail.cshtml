@using EPM.Extension.Model
@model EPM.Extension.Model.MeteringPoint

@{
    ViewBag.Title = "Detail";
    string tag = "";
    Layout = null;
    
}
<!DOCTYPE html>
<html lang="@EPM.Extension.Web.Helpers.CultureHelper.GetCurrentNeutralCulture()">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-Frame-Options" content="allow">
    <title>@ViewBag.Title - My ASP.NET Application</title>

    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.0/jquery-ui.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.dataTables.js"></script>

    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript" src="~/Scripts/App/Site.js"></script>
    @Styles.Render("~/Content/css")
    <link rel="stylesheet" href="~/Content/jquery.dataTables.css" />
    <link rel="stylesheet" href="~/Content/themes/base/base.css" />
    <link rel="stylesheet" href="~/Content/themes/base/theme.css" />
    <link rel="stylesheet" href="~/Content/themes/base/datepicker.css" />
    @Scripts.Render("~/bundles/modernizr")


</head>
<body>
    <h2>Detail</h2>

    <div class="modal fade" id="edit-threshold" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div id="edit-threshold-container" class="modal-dialog">
            <div id="form-content" class="modal-content">

            </div>
        </div>
    </div>


    <div class="row-fluid">
        <h2>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Title</h2>
        <div class="span12">
            <table id="ThresholdTable" class="table display table-responsive">
                <thead>
                    <tr>
                        <th></th>
                        <th>Active</th>
                        <th></th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col9</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col2</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col3</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col4</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col5</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col6</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col7</th>
                        <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col8</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.MeteringCodeThresholds)
                    {
                        <tr id="type_@item.Type">
                            <td>@item.Id</td>
                            <td>
                                @Html.RadioButton(@item.Type + "_isActive", "", item.IsActive, new { @disabled = "disabled" })
                            </td>
                            <td>@item.GrenzwertType</td>
                            <td>@item.GultingAb </td>
                            <td>@item.SaisonalitatAnwenden</td>
                            <td>@item.MinimaGlobalInt</td>
                            <td>@item.MaximaGlobalInt</td>
                            <td>@item.MinimaSommerInt</td>
                            <td>@item.MinimaSommerInt</td>
                            <td>@item.MinimaWinterInt</td>
                            <td>@item.MaximaWinterInt</td>

                            <td>
                                @{
                                    if (item.Type == EPM.Extension.Model.MeteringPointThresholdType.User)
                                    {
                                        tag = "<a id='addMeteringCodeThreshold' data-toggle='modal' data-target='#myModal'>Edit</a>";
                                    }
                                }
                                @Html.Raw(tag)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</body>
</html>
@section scripts
{
    <script type="text/javascript">
        function saveClicked() {
            var newModel = getFormValues();

            var postUrl = "http://localhost:10294/MeteringCodeThreshold/Edit";
            $.ajax({
                type: "POST",
                datatype: "json",
                url: postUrl,
                data: newModel,
                success: function(data) {
                    // Set values
                    alert('Changes saved successfully.');
                    var t = $('#type_User')[0];
                    var array = [
                        newModel.Id, newModel.GrenzwertBezeichner, newModel.GultingAb, newModel.SaisonalitatAnwenden, newModel.MinimaGlobal,
                        newModel.MaximaGlobal, newModel.MinimaSommer, newModel.MaximaSommer, newModel.MinimaWinter, newModel.MaximaWinter
                    ];
                    if (newModel.MaximaGlobal !== null || newModel.MinimaGlobal !== null
                      || newModel.MaximaWinter !== null || newModel.MinimaWinter !== null
                      || newModel.MaximaSommer !== null || newModel.MinimaSommer !== null) {
                        $('#System_isActive').prop('checked', '');
                        $('#User_isActive').prop('checked', 'checked');
                    }
                    $('#type_User td:eq(2)')[0].innerText = newModel.GultingAb;
                    $('#type_User td:eq(3)')[0].innerHTML = newModel.SaisonalitatAnwenden;
                    $('#type_User td:eq(4)')[0].innerHTML = newModel.MinimaGlobal;
                    $('#type_User td:eq(5)')[0].innerHTML = newModel.MaximaGlobal;
                    $('#type_User td:eq(6)')[0].innerHTML = newModel.MinimaSommer;
                    $('#type_User td:eq(7)')[0].innerHTML = newModel.MaximaSommer;
                    $('#type_User td:eq(8)')[0].innerHTML = newModel.MinimaWinter;
                    $('#type_User td:eq(9)')[0].innerHTML = newModel.MaximaWinter;


                    $('#edit-threshold').modal('hide');
                },
                error: callError
            });


        }

        function callError() {
            alert("Problem in Saving Changes.");
        }

        function getFormValues() {
            return {
                Id: $('#edit-threshold #Id').val(),
                GrenzwertBezeichner: $('#edit-threshold #GrenzwertBezeichner').val(),
                GultingAb: $('#edit-threshold #GultingAb').val(),
                SaisonalitatAnwenden: $('#edit-threshold #SaisonalitatAnwenden').val(),
                MinimaGlobal: $('#edit-threshold #MinimaGlobal').val(),
                MaximaGlobal: $('#edit-threshold #MaximaGlobal').val(),
                MinimaSommer: $('#edit-threshold #MinimaSommer').val(),
                MaximaSommer: $('#edit-threshold #MaximaSommer').val(),
                MinimaWinter: $('#edit-threshold #MinimaWinter').val(),
                MaximaWinter: $('#edit-threshold #MaximaWinter').val()
            };
        }

        $(document).ready(function() {
            var thresholdTable = $('#ThresholdTable').dataTable({
                "bFilter": false,
                "bLengthChange": false,
                "aoColumnDefs": [
                    { 'bSortable': false, 'aTargets': [0] },
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ]
            });
            $('#ThresholdTable .bottom').hide();
            if (@Model.MeteringCodeThresholds.Count() >= 2) {

                var flag = '@Model.MeteringCodeThresholds.First(x => x.Type == MeteringPointThresholdType.System).IsActive' == 'True' ? true : false;
                if (flag == true) {
                    $('#System_isActive').prop('checked', 'checked');
                } else {
                    $('#User_isActive').prop('checked', 'checked');
                }

            }
            $('#addMeteringCodeThreshold').click(function(e) {
                var data = thresholdTable.fnGetData($(this).parent().parent()[0])[0];
                var url = "/MeteringCodeThreshold/Edit/" + data; // the url to the controller
                $.get(url, function(data) {
                    $('#form-content').html(data);
                    $('#edit-threshold').modal('show');
                });
            });


            $('#ThresholdTable tbody').on('click', 'tr', function() {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                } else {
                    thresholdTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });
            $('#ThresholdTable').on('click', '.edit', function(e) {
                e.preventDefault();
                var nRow = $(this).parents('tr')[0];
                var aData = thresholdTable.fnGetData(nRow);
                window.location.href = "/MeteringCode/Edit/" + aData.Id;
            });
        });
    </script>
}
