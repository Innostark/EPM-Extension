@model EPM.Extension.Web.Models.MeteringPointViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div>
    <h4>Metering Point</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.M.Zählpunktbezeichner)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Kurzbezeichnung)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Kurzbezeichnung)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Anlagentyp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Anlagentyp)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Strasse)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Strasse)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PLZ)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PLZ)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ort)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ort)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Datenversand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Datenversand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zählverfahren)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zählverfahren)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Messung)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Messung)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Entnahme)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Entnahme)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Kundenrückmeldung)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Kundenrückmeldung)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerId)
        </dd>

    </dl>
</div>


<!-- Button trigger modal -->
<button type="button" id="addMeteringCodeThreshold" class="btn btn-primary btn-sm" style="float: right;" data-toggle="modal" data-target="#myModal">
    Add
</button>

<div class="modal fade" id="edit-threshold" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div id="edit-threshold-container" class="modal-dialog">
        <div id="form-content" class="modal-content">
            
        </div>
    </div>
</div>

<div class="row-fluid">
<div class="span12">
    <table id="ThresholdTable" class="table display table-responsive">
        <thead>
            <tr>
                <th></th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col1</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col9</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col2</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col3</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col4</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col5</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col6</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col7</th>
                <th>@EPM.Extension.Web.Resources.MeteringCodeThreshold.Col8</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MeteringCodeThresholds.ToList())
            {
                <tr>
                    <td>&nbsp;</td>
                    <td>@item.GrenzwertBezeichner</td>
                    <td>@item.GultingAb </td>
                    <td>@item.SaisonalitatAnwenden</td>
                    <td>@item.MinimaGlobal</td>
                    <td>@item.MaximaGlobal</td>
                    <td>@item.MinimaSommer</td>
                    <td>@item.MinimaSommer</td>
                    <td>@item.MinimaWinter</td>
                    <td>@item.MaximaWinter</td>
                </tr>
            }
        </tbody>
    </table>
    
    <div role="tabpanel">

        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#general" aria-controls="general" role="tab" data-toggle="tab">@EPM.Extension.Web.Resources.MeteringCode.General</a></li>
            <li role="presentation"><a href="#flat" aria-controls="flat" role="tab" data-toggle="tab">@EPM.Extension.Web.Resources.MeteringCode.Flat</a></li>
            <li role="presentation"><a href="#openinghours" aria-controls="openinghours" role="tab" data-toggle="tab">@EPM.Extension.Web.Resources.MeteringCode.OpeningHours</a></li>
            <li role="presentation"><a href="#analog" aria-controls="analog" role="tab" data-toggle="tab">@EPM.Extension.Web.Resources.MeteringCode.Analog</a></li>
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="general">
                
            </div>
            <div role="tabpanel" class="tab-pane" id="flat">
                
            </div>
            <div role="tabpanel" class="tab-pane" id="openinghours">
                
            </div>
            <div role="tabpanel" class="tab-pane" id="analog">
                
            </div>
        </div>

    </div>
</div>
    </div>

    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
@section scripts
{
    <script type="text/javascript">
        function saveClicked() {
            var newModel = getFormValues();
            alert(newModel);
            var t = $('#ThresholdTable').DataTable();
            var array = [
                newModel.Id, newModel.GrenzwertBezeichner, newModel.GultingAb, newModel.SaisonalitatAnwenden, newModel.MinimaGlobal,
                newModel.MaximaGlobal, newModel.MinimaSommer, newModel.MaximaSommer, newModel.MinimaWinter, newModel.MaximaWinter
            ];
            t.rows.add([array]
            ).draw();
            $('#edit-threshold').modal('hide');
        }

        function getFormValues() {
            return {
                Id: null, //$('.edit-threshold #Id').val(),
                GrenzwertBezeichner: $('#edit-threshold #GrenzwertBezeichner').val(),
                GultingAb: $('#edit-threshold #GultingAb').val(),
                SaisonalitatAnwenden: $('#edit-threshold #SaisonalitatAnwenden').val(),
                MinimaGlobal: $('#edit-threshold #MinimaGlobal').val(),
                MaximaGlobal: $('#edit-threshold #MaximaGlobal').val(),
                MinimaSommer: $('#edit-threshold #MinimaSommer').val(),
                MaximaSommer: $('#edit-threshold #MaximaSommer').val(),
                MinimaWinter: $('#edit-threshold #MinimaWinter').val(),
                MaximaWinter: $('#edit-threshold #MaximaWinter').val()
            };
        }

        $(document).ready(function() {
            var thresholdTable = $('#ThresholdTable').dataTable({
                "bFilter": false,
                "bLengthChange": false,
                "aoColumnDefs": [
                    { 'bSortable': false, 'aTargets': [0] },
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }
                ]
            });
            $('#addMeteringCodeThreshold').click(function() {
                var url = "/MeteringCodeThreshold/Create"; // the url to the controller
                $.get(url, function(data) {
                    $('#form-content').html(data);
                    $('#edit-threshold').modal('show');
                });
            });


            $('#ThresholdTable tbody').on('click', 'tr', function() {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                } else {
                    thresholdTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });
            $('#ThresholdTable').on('click', '.edit', function(e) {
                e.preventDefault();
                var nRow = $(this).parents('tr')[0];
                var aData = thresholdTable.fnGetData(nRow);
                window.location.href = "/MeteringCode/Edit/" + aData.Id;
            });
        });
    </script>
}
