@model EPM.Extension.Model.MeteringPointThreshold


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">@EPM.Extension.Web.Resources.MeteringCodeThreshold.Title</h3>
</div>


<div class="modal-body">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
        @Html.LabelFor(model => model.GultingAb, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.GultingAb, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GultingAb, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SaisonalitatAnwenden, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            <div class="checkbox">
                @Html.EditorFor(model => model.SaisonalitatAnwenden)
                @Html.ValidationMessageFor(model => model.SaisonalitatAnwenden, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinimaGlobal, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MinimaGlobalInt, new { htmlAttributes = new { @class = "form-control", @id="MinimaGlobal" } })
            @Html.ValidationMessageFor(model => model.MinimaGlobalInt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaximaGlobal, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MaximaGlobalInt, new { htmlAttributes = new { @class = "form-control",@id="MaximaGlobal" } })
            @Html.ValidationMessageFor(model => model.MaximaGlobalInt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinimaSommer, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MinimaSommerInt, new { htmlAttributes = new { @class = "form-control",@id="MinimaSommer" } })
            @Html.ValidationMessageFor(model => model.MinimaSommerInt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaximaSommer, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MaximaSommerInt, new { htmlAttributes = new { @class = "form-control",@id ="MaximaSommer" }})
            @Html.ValidationMessageFor(model => model.MaximaSommerInt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinimaWinter, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MinimaWinterInt, new { htmlAttributes = new { @class = "form-control", @id = "MinimaWinter" } })
            @Html.ValidationMessageFor(model => model.MinimaWinterInt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaximaWinter, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.MaximaWinterInt, new { htmlAttributes = new { @class = "form-control", @id = "MaximaWinter" } })
            @Html.ValidationMessageFor(model => model.MaximaWinterInt, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
<div class="modal-footer">
    <button id="saveThreshold" class="btn btn-success">Save</button>
</div>

<script language="javascript">
    function showAdvanceFields() {
        $('#edit-threshold #MinimaSommer').show();
        $('#edit-threshold #MaximaSommer').show();
        $('#edit-threshold #MinimaWinter').show();
        $('#edit-threshold #MaximaWinter').show();
    }
    function hideAdvanceFields() {
        $('#edit-threshold #MinimaSommer').hide();
        $('#edit-threshold #MaximaSommer').hide();
        $('#edit-threshold #MinimaWinter').hide();
        $('#edit-threshold #MaximaWinter').hide();
    }

    function showHideAdvanceFields() {
        if ($('#SaisonalitatAnwenden')) {
            showAdvanceFields();
        } else {
            hideAdvanceFields();
        }
    }
    (function thename() {

        $("#GultingAb").datepicker();
        $('#SaisonalitatAnwenden').click(function() {
            showHideAdvanceFields();
        });

        $('#saveThreshold').click(function () {
            saveClicked();
        });
        if ('@Model.SaisonalitatAnwenden') {
            showAdvanceFields();
        } else {
            hideAdvanceFields();
        }

    }()); //auto-run

</script>
